// <auto-generated />
using ChallengeMeLi.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChallengeMeLi.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220619000516_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChallengeMeLi.Domain.Entities.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("MessageId");

                    b.HasIndex("Name");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChallengeMeLi.Domain.Entities.Satellite", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("PosX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PosY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SatelliteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Name");

                    b.ToTable("Satellites");
                });

            modelBuilder.Entity("ChallengeMeLi.Domain.Entities.SatelliteData", b =>
                {
                    b.Property<int>("SatelliteDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Distance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("SatelliteDataId");

                    b.HasIndex("Name");

                    b.ToTable("SatellitesData");
                });

            modelBuilder.Entity("ChallengeMeLi.Domain.Entities.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WordId");

                    b.HasIndex("MessageId");

                    b.ToTable("MessageWords");
                });

            modelBuilder.Entity("ChallengeMeLi.Domain.Entities.Message", b =>
                {
                    b.HasOne("ChallengeMeLi.Domain.Entities.Satellite", "Satellite")
                        .WithMany()
                        .HasForeignKey("Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Satellite");
                });

            modelBuilder.Entity("ChallengeMeLi.Domain.Entities.SatelliteData", b =>
                {
                    b.HasOne("ChallengeMeLi.Domain.Entities.Satellite", "Satellite")
                        .WithMany()
                        .HasForeignKey("Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Satellite");
                });

            modelBuilder.Entity("ChallengeMeLi.Domain.Entities.Word", b =>
                {
                    b.HasOne("ChallengeMeLi.Domain.Entities.Message", "Message")
                        .WithMany("Words")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("ChallengeMeLi.Domain.Entities.Message", b =>
                {
                    b.Navigation("Words");
                });
#pragma warning restore 612, 618
        }
    }
}
